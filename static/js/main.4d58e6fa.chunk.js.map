{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getData","url","a","fetch","response","json","getMovie","value","API_URL","defaultMovie","FindMovie","setMovies","useState","query","setQuery","searchResult","setSearchResult","errorMessage","setErrorMessage","findMovieSubmit","event","preventDefault","result","Response","foundMovie","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","cn","onChange","e","target","onClick","find","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d58e6fa.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const getData = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getMovie = async (value: string) => {\n  const API_KEY = '45abeff6';\n  const API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&t=${value}`;\n  const movie = await getData(API_URL);\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (value: Movie[]) => void;\n};\n\nconst defaultMovie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [searchResult, setSearchResult] = useState<Movie>(defaultMovie);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const findMovieSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const result = await getMovie(query);\n\n    setErrorMessage('');\n\n    if (result.Response === 'True') {\n      const foundMovie: Movie = {\n        title: result.Title,\n        description: result.Plot,\n        imgUrl: result.Poster,\n        imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n        imdbId: result.imdbID,\n      };\n\n      setSearchResult(foundMovie);\n\n      return;\n    }\n\n    setErrorMessage(\"Can't find a movie with such a title\");\n  };\n\n  const handleClickAddMovie = () => {\n    if (!searchResult.title) {\n      setErrorMessage('First you should find a movie');\n\n      return;\n    }\n\n    if (movies.find(movie => movie.title === searchResult.title)) {\n      setErrorMessage('This movie is already added');\n\n      return;\n    }\n\n    setMovies([...movies, searchResult]);\n    setSearchResult(defaultMovie);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={findMovieSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': errorMessage,\n              })}\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n                setErrorMessage('');\n              }}\n            />\n          </div>\n          {\n            errorMessage\n            && (\n              <p className=\"help is-danger\">\n                {errorMessage}\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleClickAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {searchResult.title && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...searchResult} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([...data]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}